-- データベースの作成
CREATE DATABASE IF NOT EXISTS studio_reservation_system;
USE studio_reservation_system;

-- CLIENTテーブル
CREATE TABLE CLIENT (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_email VARCHAR(255) NOT NULL,
    contact_phone VARCHAR(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- STUDIOテーブル
CREATE TABLE STUDIO (
    id INT AUTO_INCREMENT PRIMARY KEY,
    client_id INT NOT NULL,
    name VARCHAR(255) NOT NULL,
    location VARCHAR(255),
    capacity INT,
    hourly_rate DECIMAL(10, 2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (client_id) REFERENCES CLIENT(id)
);

-- CALENDAR_SETTINGSテーブル
CREATE TABLE CALENDAR_SETTINGS (
    id INT AUTO_INCREMENT PRIMARY KEY,
    client_id INT NOT NULL,
    settings JSON,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (client_id) REFERENCES CLIENT(id)
);

-- CALENDAR_DISPLAY_SETTINGSテーブル
CREATE TABLE CALENDAR_DISPLAY_SETTINGS (
    id INT AUTO_INCREMENT PRIMARY KEY,
    client_id INT NOT NULL,
    display_start_time TIME,
    display_end_time TIME,
    default_view ENUM('day', 'week', 'month') DEFAULT 'week',
    custom_views JSON,
    show_weekends BOOLEAN DEFAULT TRUE,
    time_slot_intervals JSON,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (client_id) REFERENCES CLIENT(id)
);

-- HOLIDAY_SETTINGSテーブル
CREATE TABLE HOLIDAY_SETTINGS (
    id INT AUTO_INCREMENT PRIMARY KEY,
    client_id INT NOT NULL,
    holiday_name VARCHAR(255) NOT NULL,
    holiday_date DATE NOT NULL,
    is_business_day BOOLEAN DEFAULT FALSE,
    custom_start_time TIME,
    custom_end_time TIME,
    repeats_yearly BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (client_id) REFERENCES CLIENT(id)
);

-- SPECIAL_BUSINESS_DAYテーブル
CREATE TABLE SPECIAL_BUSINESS_DAY (
    id INT AUTO_INCREMENT PRIMARY KEY,
    client_id INT NOT NULL,
    admin_id INT NOT NULL,
    day_name VARCHAR(255),
    day_date DATE NOT NULL,
    custom_start_time TIME,
    custom_end_time TIME,
    notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (client_id) REFERENCES CLIENT(id),
    FOREIGN KEY (admin_id) REFERENCES ADMIN(id)
);

-- FORM_SETTINGSテーブル
CREATE TABLE FORM_SETTINGS (
    id INT AUTO_INCREMENT PRIMARY KEY,
    client_id INT NOT NULL,
    settings JSON,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (client_id) REFERENCES CLIENT(id)
);

-- USERテーブル
CREATE TABLE USER (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    phone VARCHAR(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- ADMINテーブル
CREATE TABLE ADMIN (
    id INT AUTO_INCREMENT PRIMARY KEY,
    client_id INT NOT NULL,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    role ENUM('super_admin', 'admin', 'staff') DEFAULT 'staff',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (client_id) REFERENCES CLIENT(id)
);

-- RESERVATIONテーブル
CREATE TABLE RESERVATION (
    id INT AUTO_INCREMENT PRIMARY KEY,
    studio_id INT NOT NULL,
    user_id INT NOT NULL,
    admin_id INT,
    start_time DATETIME NOT NULL,
    end_time DATETIME NOT NULL,
    status ENUM('pending', 'confirmed', 'cancelled') DEFAULT 'pending',
    notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (studio_id) REFERENCES STUDIO(id),
    FOREIGN KEY (user_id) REFERENCES USER(id),
    FOREIGN KEY (admin_id) REFERENCES ADMIN(id)
);

-- ADMIN_SESSIONテーブル
CREATE TABLE ADMIN_SESSION (
    id INT AUTO_INCREMENT PRIMARY KEY,
    admin_id INT NOT NULL,
    token VARCHAR(255) NOT NULL,
    expires_at DATETIME NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (admin_id) REFERENCES ADMIN(id)
);

-- ADMIN_ACTION_LOGテーブル
CREATE TABLE ADMIN_ACTION_LOG (
    id INT AUTO_INCREMENT PRIMARY KEY,
    admin_id INT NOT NULL,
    reservation_id INT,
    action_type VARCHAR(50) NOT NULL,
    action_details JSON,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (admin_id) REFERENCES ADMIN(id),
    FOREIGN KEY (reservation_id) REFERENCES RESERVATION(id)
);

-- ADMIN_NOTIFICATIONテーブル
CREATE TABLE ADMIN_NOTIFICATION (
    id INT AUTO_INCREMENT PRIMARY KEY,
    admin_id INT NOT NULL,
    type VARCHAR(50) NOT NULL,
    message TEXT NOT NULL,
    is_read BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (admin_id) REFERENCES ADMIN(id)
);

-- ADMIN_DEVICEテーブル
CREATE TABLE ADMIN_DEVICE (
    id INT AUTO_INCREMENT PRIMARY KEY,
    admin_id INT NOT NULL,
    device_token VARCHAR(255) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    last_active DATETIME,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (admin_id) REFERENCES ADMIN(id)
);

-- ADMIN_SETTINGSテーブル
CREATE TABLE ADMIN_SETTINGS (
    id INT AUTO_INCREMENT PRIMARY KEY,
    admin_id INT NOT NULL,
    app_settings JSON,
    notification_preferences JSON,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (admin_id) REFERENCES ADMIN(id)
);
